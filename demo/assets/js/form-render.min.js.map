{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/form-render.js","src/js/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","FormRender","options","element","utils","formRender","this","defaults","destroyTemplate","container","dataType","formData","messages","formRendered","noFormData","other","selectColor","onRender","render","notify","error","message","console","success","log","warning","warn","opts","$","extend","setData","xml","parseXML","json","window","JSON","parse","Element","prototype","appendFormFields","fields","forEach","field","appendChild","emptyContainer","lastChild","removeChild","runCallbacks","santizeField","sanitizedField","Object","assign","className","class","values","map","option","trimObj","exportMarkup","elem","innerHTML","join","rendered","push","fieldRender","renderedFormWrap","markup","jQuery","noData","fn","elems","each","dataset","fbUtils","inArray","needle","haystack","indexOf","attrs","xmlRemove","undefined","attr","Array","isArray","validAttr","invalid","attrString","attributes","hasOwnProperty","safeAttr","name","value","safeAttrName","valString","escapeAttr","toString","replace","trim","hyphenCase","str","$1","toLowerCase","camelCase","m","w","toUpperCase","tag","content","arguments","contentType","document","createElement","getContentType","_typeof","appendContent","string","object","array","setAttribute","parseAttrs","data","attrVal","match","parseOptions","getElementsByTagName","optionData","label","textContent","xmlString","parser","DOMParser","parseFromString","fieldData","children","escapeHtml","html","escapeElement","\"","&","<",">","replaceTag","escapeAttrs","callback","scope","unique","filter","pos","arr","preview","fieldMarkup","fieldLabel","optionsMarkup","fieldLabelText","fieldDesc","description","fieldRequired","fieldOptions","id","multiple","type","subtype","required","fieldLabelVal","fieldDataString","fieldVal","optionAttrsString","placeholder","selected","optionAttrs","_optionAttrsString","_i","checked","otherOptionAttrs","onclick","toggle","setTimeout","getElementById","kcToggle","otherOptionCB","otherId","otherInput","otherInputValue","style","display","capitalize"],"mappings":"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","file":"form-render.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * render the formBuilder XML into html\n * @param  {Object} options\n * @param  {Object} element html element where form will be rendered (optional)\n * @return {Object} formRender instance\n */\nfunction FormRender(options, element) {\n  const utils = require('./utils.js');\n\n  const formRender = this;\n  const defaults = {\n      destroyTemplate: true, // @todo\n      container: false,\n      dataType: 'json',\n      formData: false,\n      messages: {\n        formRendered: 'Form Rendered',\n        noFormData: 'No form data.',\n        other: 'Other',\n        selectColor: 'Select Color'\n      },\n      onRender: () => {},\n      render: true,\n      notify: {\n        error: function(message) {\n          return console.error(message);\n        },\n        success: function(message) {\n          return console.log(message);\n        },\n        warning: function(message) {\n          return console.warn(message);\n        }\n      }\n    };\n\n  let opts = $.extend(true, defaults, options);\n\n  (function() {\n    if (!opts.formData) {\n      return false;\n    }\n\n    let setData = {\n      xml: formData => utils.parseXML(formData),\n      json: formData => window.JSON.parse(formData)\n    };\n\n    opts.formData = setData[opts.dataType](opts.formData) || false;\n  })();\n\n  /**\n   * Extend Element prototype to allow us to append fields\n   *\n   * @param  {Object} fields Node elements\n   */\n  Element.prototype.appendFormFields = function(fields) {\n    let element = this;\n    fields.forEach(field => element.appendChild(field));\n  };\n\n  /**\n   * Extend Element prototype to remove content\n   */\n  Element.prototype.emptyContainer = function() {\n    let element = this;\n    while (element.lastChild) {\n      element.removeChild(element.lastChild);\n    }\n  };\n\n  let runCallbacks = function() {\n    if (opts.onRender) {\n      opts.onRender();\n    }\n  };\n\n  let santizeField = (field) => {\n    let sanitizedField = Object.assign({}, field);\n    sanitizedField.className = field.className || field.class || null;\n    delete sanitizedField.class;\n\n    if (field.values) {\n      field.values = field.values.map(option => utils.trimObj(option));\n    }\n\n    return utils.trimObj(sanitizedField);\n  };\n\n  let exportMarkup = fields => fields.map(elem => elem.innerHTML).join('');\n\n  // Begin the core plugin\n  let rendered = [];\n\n  // generate field markup if we have fields\n  if (opts.formData) {\n    for (let i = 0; i < opts.formData.length; i++) {\n      let sanitizedField = santizeField(opts.formData[i]);\n      rendered.push(utils.fieldRender(sanitizedField, opts));\n    }\n\n    if (opts.render) {\n      if (opts.container) {\n        let renderedFormWrap = utils.markup('div', rendered, {\n          className: 'rendered-form'\n        });\n        if (opts.container instanceof jQuery) {\n          opts.container = opts.container[0];\n        }\n        opts.container.emptyContainer();\n        opts.container.appendChild(renderedFormWrap);\n      } else if (element) {\n        element.emptyContainer();\n        element.appendFormFields(rendered);\n      }\n\n      runCallbacks();\n      opts.notify.success(opts.messages.formRendered);\n    } else {\n      formRender.markup = exportMarkup(rendered);\n    }\n  } else {\n    let noData = utils.markup('div', opts.messages.noFormData, {\n      className: 'no-form-data'\n    });\n    rendered.push(noData);\n    opts.notify.error(opts.messages.noFormData);\n  }\n\n  return formRender;\n}\n\n(function($) {\n  $.fn.formRender = function(options) {\n    let elems = this;\n    elems.each(function(i) {\n      let formRender = new FormRender(options, elems[i]);\n      elems[i].dataset.formRender = formRender;\n      return formRender;\n    });\n  };\n})(jQuery);\n\nwindow.FormRender = FormRender;\n\nexport default FormRender;\n","/**\n * Cross file utilities for working with arrays,\n * sorting and other fun stuff\n * @return {Object} fbUtils\n */\n// function utils() {\n  const fbUtils = {};\n\n  // cleaner syntax for testing indexOf element\n  fbUtils.inArray = function(needle, haystack) {\n    return haystack.indexOf(needle) !== -1;\n  };\n\n  /**\n   * Remove null or undefined values\n   * @param  {Object} attrs {attrName: attrValue}\n   * @return {Object}       Object trimmed of null or undefined values\n   */\n  fbUtils.trimObj = function(attrs) {\n    let xmlRemove = [\n      null,\n      undefined,\n      '',\n      false,\n      'false'\n    ];\n    for (let attr in attrs) {\n      if (fbUtils.inArray(attrs[attr], xmlRemove)) {\n        delete attrs[attr];\n      } else if (Array.isArray(attrs[attr])) {\n        if (!attrs[attr].length) {\n          delete attrs[attr];\n        }\n      }\n    }\n\n    return attrs;\n  };\n\n  /**\n   * Test if attribute is a valid HTML attribute\n   * @param  {String} attr\n   * @return {Boolean}\n   */\n  fbUtils.validAttr = function(attr) {\n    let invalid = [\n      'values',\n      'enableOther',\n      'other',\n      'label',\n      // 'style',\n      'subtype'\n    ];\n    return !fbUtils.inArray(attr, invalid);\n  };\n\n  /**\n   * Convert an attrs object into a string\n   *\n   * @param  {Object} attrs object of attributes for markup\n   * @return {string}\n   */\n  fbUtils.attrString = function(attrs) {\n    let attributes = [];\n\n    for (let attr in attrs) {\n      if (attrs.hasOwnProperty(attr) && fbUtils.validAttr(attr)) {\n        attr = fbUtils.safeAttr(attr, attrs[attr]);\n        attributes.push(attr.name + attr.value);\n      }\n    }\n    return attributes.join(' ');\n  };\n\n  /**\n   * Convert attributes to markup safe strings\n   * @param  {String} name  attribute name\n   * @param  {String} value attribute value\n   * @return {Object}       {attrName: attrValue}\n   */\n  fbUtils.safeAttr = function(name, value) {\n    name = fbUtils.safeAttrName(name);\n    let valString;\n\n    if (value) {\n      if (Array.isArray(value)) {\n        valString = fbUtils.escapeAttr(value.join(' '));\n      } else {\n        if (typeof(value) === 'boolean') {\n          value = value.toString();\n        }\n        valString = fbUtils.escapeAttr(value.replace(',', ' ').trim());\n      }\n    }\n\n    value = value ? `=\"${valString}\"` : '';\n    return {\n      name,\n      value\n    };\n  };\n\n  fbUtils.safeAttrName = function(name) {\n    let safeAttr = {\n      className: 'class'\n    };\n\n    return safeAttr[name] || fbUtils.hyphenCase(name);\n  };\n\n  /**\n   * Convert strings into lowercase-hyphen\n   *\n   * @param  {String} str\n   * @return {String}\n   */\n  fbUtils.hyphenCase = (str) => {\n    str = str.replace(/[^\\w\\s\\-]/gi, '');\n    str = str.replace(/([A-Z])/g, function($1) {\n      return '-' + $1.toLowerCase();\n    });\n\n    return str.replace(/\\s/g, '-').replace(/^-+/g, '');\n  };\n\n  /**\n   * convert a hyphenated string to camelCase\n   * @param  {String} str\n   * @return {String}\n   */\n  fbUtils.camelCase = (str) => {\n    return str.replace(/-([a-z])/g, function(m, w) {\n      return w.toUpperCase();\n    });\n  };\n\n  /**\n   * Generate markup wrapper where needed\n   *\n   * @param  {string}              tag\n   * @param  {String|Array|Object} content we wrap this\n   * @param  {Object}              attrs\n   * @return {String}\n   */\n  fbUtils.markup = function(tag, content = '', attrs = {}) {\n    let contentType,\n      field = document.createElement(tag),\n      getContentType = function(content) {\n        return Array.isArray(content) ? 'array' : typeof content;\n      },\n      appendContent = {\n        string: function(content) {\n          field.innerHTML = content;\n        },\n        object: function(content) {\n          return field.appendChild(content);\n        },\n        array: function(content) {\n          for (let i = 0; i < content.length; i++) {\n            contentType = getContentType(content[i]);\n            appendContent[contentType](content[i]);\n          }\n        }\n      };\n\n    for (let attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        let name = fbUtils.safeAttrName(attr);\n        field.setAttribute(name, attrs[attr]);\n      }\n    }\n\n    contentType = getContentType(content);\n\n    if (content) {\n      appendContent[contentType].call(this, content);\n    }\n\n    return field;\n  };\n\n  /**\n   * Convert html element attributes to key/value object\n   * @param  {Object} DOM element\n   * @return {Object} ex: {attrName: attrValue}\n   */\n  fbUtils.parseAttrs = function(elem) {\n    let attrs = elem.attributes;\n    let data = {};\n    fbUtils.forEach(attrs, attr => {\n      let attrVal = attrs[attr].value;\n      if (attrVal.match(/false|true/g)) {\n        attrVal = (attrVal === 'true');\n      } else if (attrVal.match(/undefined/g)) {\n        attrVal = undefined;\n      }\n\n      if (attrVal) {\n        data[attrs[attr].name] = attrVal;\n      }\n    });\n\n    return data;\n  };\n\n  /**\n   * Convert field options to optionData\n   * @param  {Object} DOM element\n   * @return {Array}      optionData array\n   */\n  fbUtils.parseOptions = function(field) {\n    let options = field.getElementsByTagName('option'),\n      optionData = {},\n      data = [];\n\n    if (options.length) {\n      for (let i = 0; i < options.length; i++) {\n        optionData = fbUtils.parseAttrs(options[i]);\n        optionData.label = options[i].textContent;\n        data.push(optionData);\n      }\n    }\n\n    return data;\n  };\n\n  /**\n   * Parse XML formData\n   * @param  {String} xmlString\n   * @return {Array}            formData array\n   */\n  fbUtils.parseXML = function(xmlString) {\n    const parser = new window.DOMParser();\n    let xml = parser.parseFromString(xmlString, 'text/xml'),\n      formData = [];\n\n    if (xml) {\n      let fields = xml.getElementsByTagName('field');\n      for (let i = 0; i < fields.length; i++) {\n        let fieldData = fbUtils.parseAttrs(fields[i]);\n\n        if (fields[i].children.length) {\n          fieldData.values = fbUtils.parseOptions(fields[i]);\n        }\n\n        formData.push(fieldData);\n      }\n    }\n\n    return formData;\n  };\n\n  /**\n   * Escape markup so it can be displayed rather than rendered\n   * @param  {String} html markup\n   * @return {String}      escaped html\n   */\n  fbUtils.escapeHtml = function(html) {\n    let escapeElement = document.createElement('textarea');\n    escapeElement.textContent = html;\n    return escapeElement.innerHTML;\n  };\n\n  // Escape an attribute\n  fbUtils.escapeAttr = function(str) {\n    let match = {\n      '\"': '&quot;',\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;'\n    };\n\n    const replaceTag = tag => match[tag] || tag;\n\n    return (typeof str === 'string') ? str.replace(/[\"&<>]/g, replaceTag) : str;\n  };\n\n  // Escape attributes\n  fbUtils.escapeAttrs = function(attrs) {\n    for (let attr in attrs) {\n      if (attrs.hasOwnProperty(attr)) {\n        attrs[attr] = fbUtils.escapeAttr(attrs[attr]);\n      }\n    }\n\n    return attrs;\n  };\n\n  // forEach that can be used on nodeList\n  fbUtils.forEach = function(array, callback, scope) {\n    for (let i = 0; i < array.length; i++) {\n      callback.call(scope, i, array[i]); // passes back stuff we need\n    }\n  };\n\n  /**\n   * Remove duplicates from an array of elements\n   * @param  {Array} arrArg array with possible duplicates\n   * @return {Array}        array with only unique values\n   */\n  fbUtils.unique = function(array) {\n    return array.filter((elem, pos, arr) => {\n      return arr.indexOf(elem) === pos;\n    });\n  };\n\n  /**\n   * Generate preview markup\n   * @param  {Object}  fieldData\n   * @param  {Object}  opts\n   * @param  {Boolean} preview\n   * @return {String}  preview markup for field\n   */\n  fbUtils.fieldRender = function(fieldData, opts, preview = false) {\n      let fieldMarkup = '';\n      let fieldLabel = '';\n      let optionsMarkup = '';\n      let fieldLabelText = fieldData.label || '';\n      let fieldDesc = fieldData.description || '';\n      let fieldRequired = '';\n      let fieldOptions = fieldData.values;\n\n      fieldData.name = preview ? fieldData.name + '-preview' : fieldData.name;\n      fieldData.id = fieldData.name;\n      if (fieldData.multiple) {\n        fieldData.name = fieldData.name + '[]';\n      }\n\n      fieldData.type = fieldData.subtype || fieldData.type;\n\n      if (fieldData.required) {\n        fieldData.required = null;\n        fieldData['aria-required'] = 'true';\n        fieldRequired = '<span class=\"required\">*</span>';\n      }\n\n      if (fieldData.type !== 'hidden') {\n        if (fieldDesc) {\n          fieldDesc = `<span class=\"tooltip-element\" tooltip=\"${fieldDesc}\">?</span>`;\n        }\n        fieldLabel = `<label for=\"${fieldData.id}\" class=\"fb-${fieldData.type}-label\">${fieldLabelText} ${fieldRequired} ${fieldDesc}</label>`;\n      }\n\n      let fieldLabelVal = fieldData.label;\n\n      delete fieldData.label;\n      delete fieldData.description;\n\n      let fieldDataString = fbUtils.attrString(fieldData);\n\n      switch (fieldData.type) {\n        case 'textarea':\n        case 'rich-text':\n          delete fieldData.type;\n          let fieldVal = fieldData.value || '';\n          fieldMarkup = `${fieldLabel}<textarea ${fieldDataString}>${fieldVal}</textarea>`;\n          break;\n        case 'select':\n          let optionAttrsString;\n          fieldData.type = fieldData.type.replace('-group', '');\n\n          if (fieldOptions) {\n            if (fieldData.placeholder) {\n              optionsMarkup += `<option disabled selected>${fieldData.placeholder}</option>`;\n            }\n\n            for (let i = 0; i < fieldOptions.length; i++) {\n              if (!fieldOptions[i].selected || fieldData.placeholder) {\n                delete fieldOptions[i].selected;\n              }\n              if (!fieldOptions[i].label) {\n                fieldOptions[i].label = '';\n              }\n              optionAttrsString = fbUtils.attrString(fieldOptions[i]);\n              optionsMarkup += `<option ${optionAttrsString}>${fieldOptions[i].label}</option>`;\n            }\n          }\n\n          fieldMarkup = `${fieldLabel}<select ${fieldDataString}>${optionsMarkup}</select>`;\n          break;\n        case 'checkbox-group':\n        case 'radio-group':\n          let optionAttrs;\n          fieldData.type = fieldData.type.replace('-group', '');\n\n          if (fieldData.type === 'checkbox') {\n            fieldData.name = fieldData.name + '[]';\n          }\n\n          if (fieldOptions) {\n            let optionAttrsString;\n\n            for (let i = 0; i < fieldOptions.length; i++) {\n              optionAttrs = Object.assign({value: '', label: ''}, fieldData, fieldOptions[i]);\n\n              if (optionAttrs.selected) {\n                delete optionAttrs.selected;\n                optionAttrs.checked = null;\n              }\n\n              optionAttrs.id = fieldData.id + '-' + i;\n              optionAttrsString = fbUtils.attrString(optionAttrs);\n              optionsMarkup += `<input ${optionAttrsString} /> <label for=\"${optionAttrs.id}\">${optionAttrs.label}</label><br>`;\n            }\n\n            if (fieldData.other) {\n              let otherOptionAttrs = {\n                id: fieldData.id + '-' + 'other',\n                className: fieldData.className + ' other-option',\n                onclick: `fbUtils.otherOptionCB('${fieldData.id}-other')`\n              };\n\n              optionAttrsString = fbUtils.attrString(Object.assign({}, fieldData, otherOptionAttrs));\n\n              optionsMarkup += `<input ${optionAttrsString} /> <label for=\"${otherOptionAttrs.id}\">${opts.messages.other}</label> <input type=\"text\" name=\"${fieldData.name}\" id=\"${otherOptionAttrs.id}-value\" style=\"display:none;\" />`;\n            }\n          }\n          fieldMarkup = `${fieldLabel}<div class=\"${fieldData.type}-group\">${optionsMarkup}</div>`;\n          break;\n        case 'text':\n        case 'password':\n        case 'email':\n        case 'number':\n        case 'file':\n        case 'hidden':\n        case 'date':\n        case 'tel':\n        case 'autocomplete':\n          fieldMarkup = `${fieldLabel} <input ${fieldDataString}>`;\n          break;\n        case 'color':\n          fieldMarkup = `${fieldLabel} <input ${fieldDataString}> ${opts.messages.selectColor}`;\n          break;\n        case 'button':\n        case 'submit':\n          fieldMarkup = `<button ${fieldDataString}>${fieldLabelVal}</button>`;\n          break;\n        case 'checkbox':\n          fieldMarkup = `<input ${fieldDataString}> ${fieldLabel}`;\n\n          if (fieldData.toggle) {\n            setTimeout(function() {\n              $(document.getElementById(fieldData.id)).kcToggle();\n            }, 100);\n          }\n          break;\n        default:\n          fieldMarkup = `<${fieldData.type} ${fieldDataString}>${fieldLabelVal}</${fieldData.type}>`;\n      }\n\n      if (fieldData.type !== 'hidden') {\n        let className = fieldData.id ? `fb-${fieldData.type} form-group field-${fieldData.id}` : '';\n        fieldMarkup = fbUtils.markup('div', fieldMarkup, {\n          className: className\n        });\n      } else {\n        fieldMarkup = fbUtils.markup('input', null, fieldData);\n      }\n\n      return fieldMarkup;\n    };\n\n  /**\n   * Callback for other option.\n   * Toggles the hidden text area for \"other\" option.\n   * @param  {String} otherId id of the \"other\" option input\n   */\n  fbUtils.otherOptionCB = (otherId) => {\n    const otherInput = document.getElementById(otherId);\n    const otherInputValue = document.getElementById(`${otherId}-value`);\n\n    if (otherInput.checked) {\n      otherInput.style.display = 'none';\n      otherInputValue.style.display = 'inline-block';\n    } else {\n      otherInput.style.display = 'inline-block';\n      otherInputValue.style.display = 'none';\n    }\n  };\n\n  /**\n   * Capitalizes a string\n   * @param  {String} str uncapitalized string\n   * @return {String} str capitalized string\n   */\n  fbUtils.capitalize = (str) => {\n    return str.replace(/\\b\\w/g, function(m) {\n        return m.toUpperCase();\n      });\n  };\n//   return fbUtils;\n// }\n\nmodule.exports = fbUtils;\n"]}